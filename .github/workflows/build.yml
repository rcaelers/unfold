name: Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-msys2-clang64:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Debug
        shell: bash
        run: |
          ls -la test/data
          
      - name: Download extra packages
        shell: bash
        run: |
          gh release download windows-latest \
            --repo rcaelers/workrave-dependencies \
            --pattern "workrave-mingw-packages.tar.gz"
          echo "Downloaded files:"
          ls -la *.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify attestation
        shell: bash
        run: |
          gh attestation verify workrave-mingw-packages.tar.gz \
            --repo rcaelers/workrave-dependencies \
            --format json > attestation-result.json
          echo "Attestation verification successful!"
          cat attestation-result.json | jq '.'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract and verify contents
        shell: bash
        run: |
          mkdir _ext
          tar -xzf workrave-mingw-packages.tar.gz -C _ext
          echo "Extracted contents:"
          find _ext -type f -name "*.pkg.tar.*" | head -10

      - uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: clang64
          install: >-
            git
            mingw-w64-clang-x86_64-boost
            mingw-w64-clang-x86_64-clang
            mingw-w64-clang-x86_64-cmake
            mingw-w64-clang-x86_64-compiler-rt
            mingw-w64-clang-x86_64-glib2
            mingw-w64-clang-x86_64-gtkmm3
            mingw-w64-clang-x86_64-lld
            mingw-w64-clang-x86_64-ninja
            mingw-w64-clang-x86_64-openssl
            mingw-w64-clang-x86_64-python
            mingw-w64-clang-x86_64-python-pip
            mingw-w64-clang-x86_64-spdlog
            mingw-w64-clang-x86_64-qt6-base
            mingw-w64-clang-x86_64-qt6-svg
            mingw-w64-clang-x86_64-qt6-tools
            mingw-w64-clang-x86_64-protobuf
            tar
            xz

      - uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - shell: msys2 {0}
        run: |
          pacman -U _ext/*.pkg.tar.zst --noconfirm --needed
          mkdir _build _deploy
          export MINGW_ROOT=/c/msys64
          export MSYSTEM=CLANG64
          cmake -GNinja -B_build -H. -DCMAKE_TOOLCHAIN_FILE=cmake/toolchains/msys2.cmake -DUNFOLD_WITH_XMLSEC=ON -DCMAKE_INSTALL_PREFIX=_deploy -DUNFOLD_WITH_TESTS=ON -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}
          ninja -C _build -v install
          cd _build
          ctest -V
